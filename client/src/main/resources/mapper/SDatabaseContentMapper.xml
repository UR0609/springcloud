<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljryh.client.mapper.SDatabaseContentMapper">

    <select id="selectList"
            resultType="com.ljryh.client.entity.SDatabaseContent">
        SELECT a.*
             ,b.name as "fieldName"
             ,b.value as "fieldValue"
             ,c.name as "queryName"
             ,d.name as "inputName"
             ,e.name as "verifyName"
        FROM s_database_content a
            left join s_dict b on b.id = a.field_type
            left join s_dict c on c.id = a.query_type
            left join s_dict d on d.id = a.input_type
            left join s_dict e on e.id = a.verify_type
        where 1=1

        ORDER BY a.id
    </select>

    <update id="createTable">
        CREATE TABLE IF NOT EXISTS `${database.tableName}`
        (
        `id`          bigint auto_increment comment 'id'        primary key,
        <foreach collection="list" item="item" separator=",">
            ${item.name}
            <choose>
                <when test="item.fieldValue == 'varchar'">
                    varchar(${item.fieldLength})
                </when>
                <otherwise>
                    ${item.fieldValue}
                </otherwise>
            </choose>
            <if test="item.defaultValue != null and item.defaultValue != ''">
                default ${item.defaultValue}
            </if>
            null comment #{item.description}
        </foreach>
        ,create_time datetime           null comment '创建时间'
        ,creater     bigint             null comment '创建人'
        ,update_time datetime           null comment '更新时间'
        ,updater     bigint             null comment '更新人'
        ) comment #{database.remarks} collate = utf8_german2_ci;
    </update>

    <select id="getTableData" resultType="java.util.Map">
        select
            id as "id",
        <foreach collection="list" item="item" separator=",">
            <if test="item.isShow == 0">
                ${item.name} as "${item.name}"
                <if test="item.inputType == 12">
                    ,(select name from s_dict where type = #{item.dictType} and value = ${item.name}) as "${item.name}Name"
                </if>
            </if>
        </foreach>
        from ${database.tableName}
        <where>
            1=1
            <foreach collection="list" item="item">
                <choose>
                    <when test="item.queryType == 8">
                        <if test="item.queryCondition != null">
                           and ${item.name} like concat('%',#{item.queryCondition},'%')
                        </if>
                    </when>
                    <when test="item.queryType == 10">
                        <if test="item.queryConditionStart != null">
                            and ${item.name} &gt;= #{item.queryConditionStart}
                        </if>
                        <if test="item.queryConditionEnd != null">
                            and ${item.name} &lt;= #{item.queryConditionEnd}
                        </if>
                    </when>
                    <otherwise>
                        <if test="item.queryCondition != null">
                            and ${item.name} = #{item.queryCondition}
                        </if>
                    </otherwise>
                </choose>
            </foreach>
        </where>
        order by id desc
        limit #{pageNo},#{pageSize}
    </select>

    <select id="getTableDataCount" resultType="java.lang.Integer">
        select
            count(1)
        from ${database.tableName}
        <where>
            1=1
            <foreach collection="list" item="item">
                <choose>
                    <when test="item.queryType == 8">
                        <if test="item.queryCondition != null">
                            and ${item.name} like concat('%',#{item.queryCondition},'%')
                        </if>
                    </when>
                    <when test="item.queryType == 10">
                        <if test="item.queryConditionStart != null">
                            and ${item.name} &gt;= #{item.queryConditionStart}
                        </if>
                        <if test="item.queryConditionEnd != null">
                            and ${item.name} &lt;= #{item.queryConditionEnd}
                        </if>
                    </when>
                    <otherwise>
                        <if test="item.queryCondition != null">
                            and ${item.name} = #{item.queryCondition}
                        </if>
                    </otherwise>
                </choose>
            </foreach>
        </where>
    </select>
</mapper>
